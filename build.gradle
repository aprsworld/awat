buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}
allprojects {
    repositories {
        google()
        jcenter()
    }
}
apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'

    defaultConfig {
        targetSdkVersion 22
        minSdkVersion 16
    }

    buildTypes {
        debug {
            minifyEnabled true
            //useProguard false
        }
        release {
            minifyEnabled true
            //useProguard true // this is a default setting
        }
    }

    def getGitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    def getGitClean = { ->
        return exec {
            commandLine 'git', 'diff', '--quiet'
            ignoreExitValue = true
        }.getExitValue() == 0
    }

    signingConfigs {
        buildTypes {
            debug {
                buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
                buildConfigField "String", "BUILD_GIT_HASH", "\"${getGitHash()}\""
                buildConfigField "boolean", "BUILD_GIT_CLEAN", "\"${getGitClean()}\""
            }
            release {
                buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
                buildConfigField "String", "BUILD_GIT_HASH", "\"${getGitHash()}\""
                buildConfigField "boolean", "BUILD_GIT_CLEAN", "\"${getGitClean()}\""
            }
        }
    }

    lintOptions {
        abortOnError false
    }
}
